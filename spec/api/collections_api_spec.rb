=begin
#Sajari API

#Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.

The version of the OpenAPI document: v4
Contact: support@sajari.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for SajariAPIClient::CollectionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CollectionsApi' do
  before do
    # run before each test
    @api_instance = SajariAPIClient::CollectionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CollectionsApi' do
    it 'should create an instance of CollectionsApi' do
      expect(@api_instance).to be_instance_of(SajariAPIClient::CollectionsApi)
    end
  end

  # unit tests for create_collection
  # Create collection
  # Create an empty collection.  Before records can be added to a collection, the schema and pipelines for the collection have to be set up. Consider setting up new collections via the Sajari Console, which handles the creation of the schema and pipelines for you.
  # @param collection_id The ID to use for the collection.  This must start with an alphanumeric character followed by one or more alphanumeric or &#x60;-&#x60; characters. Strictly speaking, it must match the regular expression: &#x60;^[A-Za-z][A-Za-z0-9\\-]*$&#x60;.
  # @param collection Details of the collection to create.
  # @param [Hash] opts the optional parameters
  # @return [Collection]
  describe 'create_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_collection
  # Delete collection
  # Delete a collection and all of its associated data.  &gt; Note: this operation cannot be reversed.
  # @param collection_id The collection to delete, e.g. &#x60;my-collection&#x60;.
  # @param [Hash] opts the optional parameters
  # @return [AnyType]
  describe 'delete_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_collection
  # Get collection
  # Retrieve the details of a collection.
  # @param collection_id The collection to retrieve, e.g. &#x60;my-collection&#x60;.
  # @param [Hash] opts the optional parameters
  # @return [Collection]
  describe 'get_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_collections
  # List collections
  # Retrieve a list of collections in the account.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The maximum number of collections to return. The service may return fewer than this value.  If unspecified, at most 50 collections are returned.  The maximum value is 100; values above 100 are coerced to 100.
  # @option opts [String] :page_token A page token, received from a previous [ListCollections](/api#operation/ListCollections) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListCollections](/api#operation/ListCollections) must match the call that provided the page token.
  # @return [ListCollectionsResponse]
  describe 'list_collections test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for query_collection
  # Query collection
  # Query the collection to search for records.  The following example demonstrates how to run a simple search for a particular string:  &#x60;&#x60;&#x60;json {   \&quot;variables\&quot;: { \&quot;q\&quot;: \&quot;search terms\&quot; } } &#x60;&#x60;&#x60;  For more information:  - See [filtering content](https://docs.sajari.com/user-guide/integrating-search/filters/) - See [tracking in the Go SDK](https://github.com/sajari/sdk-go/blob/v2/session.go) - See [tracking in the JS SDK](https://github.com/sajari/sajari-sdk-js/blob/master/src/session.ts)
  # @param collection_id The collection to query, e.g. &#x60;my-collection&#x60;.
  # @param query_collection_request 
  # @param [Hash] opts the optional parameters
  # @return [QueryCollectionResponse]
  describe 'query_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_collection
  # Update collection
  # Update the details of a collection.
  # @param collection_id The collection to update, e.g. &#x60;my-collection&#x60;.
  # @param collection Details of the collection to update.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :update_mask The list of fields to be updated, separated by a comma, e.g. &#x60;field1,field2&#x60;.  Each field should be in snake case, e.g. &#x60;display_name&#x60;.  For each field that you want to update, provide a corresponding value in the collection object containing the new value.
  # @return [Collection]
  describe 'update_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
